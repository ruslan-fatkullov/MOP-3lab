Turbo Assembler	 Version 2.51	     05/11/21 13:35:16	    Page 1
main.ASM



      1	    0000			 .MODEL	SMALL
      2	    0000			 .STACK	200h
      3					 .386
      4					 INCLUDE macros.mac
1     5					 ; Макрос	вывода строки LINE
1     6					 PUTL	 MACRO LINE
1     7						 push ecx
1     8						 push eax
1     9						 push edx
1    10						 push si
1    11						 LEA   SI,   LINE
1    12						 XOR   CX,   CX
1    13						 XOR   DX,   DX
1    14						 XOR   AX,   AX
1    15						 CALL  PUTSS
1    16						 pop	 si
1    17						 pop edx
1    18						 pop eax
1    19						 pop ecx
1    20						 ENDM
1    21
1    22					 PUTLS	 MACRO LINE
1    23						 PUSH	 SI
1    24						 PUSH	 AX
1    25						 XOR   AX,   AX
1    26					     LEA   SI,	 LINE
1    27					     CALL  PUTSS
1    28						 POP	 AX
1    29						 POP	 SI
1    30					 ENDM
1    31
1    32					 INPUTMAS MACRO	STRING
1    33						 local V0, V1
1    34						 push dx
1    35						 push ax
1    36						 push esi
1    37
1    38						 xor dx, dx
1    39						 mov ah,0Ah
1    40					     lea dx,STRING
1    41					     int 21h
1    42						 lea esi, STRING
1    43
1    44						 V1:
1    45						 cmp byte ptr[esi+2], 0
1    46						 je V0
1    47						 inc esi
1    48						 jmp V1
1    49						 V0:
1    50						 mov byte ptr[esi+1], 0
1    51
1    52
1    53						 pop esi
1    54						 pop ax
1    55						 pop dx
1    56							 ENDM
1    57
Turbo Assembler	 Version 2.51	     05/11/21 13:35:16	    Page 2
main.ASM



1    58					 getElement MACRO
1    59							 ;;;
1    60						 push bx
1    61						 xor eax,eax
1    62						 mov al, byte ptr[edi]
1    63						 mov bl, 18
1    64						 mul bl
1    65						 pop bx
1    66						 ;;;
1    67							 ENDM
1    68					 ClearMas MACRO	STRING
1    69						 push esi
1    70						 lea esi, STRING
1    71						 call clearMassive
1    72						 pop esi
1    73							 ENDM
1    74					 CheckStr MACRO	STRING
1    75						 call checkOnDot
1    76						 cmp eax, 1
1    77						 jne inputError
1    78						 call checkOnSize
1    79						 cmp eax, -1
1    80						 je inputError
1    81						 call checkOnNumber
1    82						 cmp eax, -1
1    83						 je inputError
1    84							 ENDM
1    85
1    86
1    87
     88	    0000			 .DATA
     89	00000000				 Float	 struc
     90	00000000  01*(01*(2B))				 sign	 db	 1 dup('+')
     91	00000001  01*(0A*(7C))				 integer db	 10 dup('|')
     92	0000000B  01*(07*(3F))				 real	 db	 7 dup('?')
     93	00000012				 Float	 ends
     94
     95
     96	    0000  0A				 ten DB	10d
     97	    0001  00				 empty DB 0
     98	    0002  45 6E	74 65 72 20 66+		 requestForInputNumbers	DB "Enter from 3 to 20 numbers", 0
     99		  72 6F	6D 20 33 20 74+
    100		  6F 20	32 30 20 6E 75+
    101		  6D 62	65 72 73 00
    102	    001D  45 6E	74 65 72 20 69+		 requestForInputIndex DB "Enter	i, j, k", 0
    103		  2C 20	6A 2C 20 6B 00
    104	    002B  64 61	74 61 20 65 6E+		 errString DB "data entry error", 0
    105		  74 72	79 20 65 72 72+
    106		  6F 72	00
    107	    003C  77 61	6E 74 20 74 6F+		 questions	 db	 "want to enter	another	number?	[y|n]",	0
    108		  20 65	6E 74 65 72 20+
    109		  61 6E	6F 74 68 65 72+
    110		  20 6E	75 6D 62 65 72+
    111		  3F 20	5B 79 7C 6E 5D+
    112		  00
    113	    0060  6D 69	6E 69 6D 75 6D+		 minElem db	 "minimum element", 0
    114		  20 65	6C 65 6D 65 6E+
Turbo Assembler	 Version 2.51	     05/11/21 13:35:16	    Page 3
main.ASM



    115		  74 00
    116	    0070  72 65	73 75 6C 74 00		 res	 db	 "result", 0
    117	    0077  14				 testStr db 20
    118	    0078  15*(??)				 db 21 dup(?)
    119
    120	    008D  14*(01*(2B) 0A*(7C) +		 array	 Float	 20	 dup(<>)
    121		  07*(3F))
    122
    123
    124	    01F5  00 00	00			 index DB 0,0,0
    125	    01F8			 .CODE
    126	    0000			 START:
    127	    0000  B8 0000s			 mov ax,@data
    128	    0003  8E D8			     mov ds,ax
    129
    130	    0005  B9 0000			 mov cx, 0
    131
    132						 INPUTMAS testStr
1   133	    0008  52				 push dx
1   134	    0009  50				 push ax
1   135	    000A  66| 56			 push esi
1   136	    000C  33 D2				 xor dx, dx
1   137	    000E  B4 0A				 mov ah,0Ah
1   138	    0010  BA 0077r		     lea dx,testStr
1   139	    0013  CD 21			     int 21h
1   140	    0015  66| 8D 36 0077r		 lea esi, testStr
1   141	    001A				 ??0001:
1   142	    001A  67| 80 7E 02 00		 cmp byte ptr[esi+2], 0
1   143	    001F  74 06	90 90			 je ??0000
1   144	    0023  66| 46			 inc esi
1   145	    0025  EB F3				 jmp ??0001
1   146	    0027				 ??0000:
1   147	    0027  67| C6 46 01 00		 mov byte ptr[esi+1], 0
1   148	    002C  66| 5E			 pop esi
1   149	    002E  58				 pop ax
1   150	    002F  5A				 pop dx
    151	    0030  66| 8D 36 0077r		 lea esi, testStr
    152	    0035  E8 0000e			 call ATOI
    153
    154	    0038  66| 8D 3E 008Dr		 lea edi, array
    155
    156
    157						 PUTL requestForInputNumbers
1   158	    003D  66| 51			 push ecx
1   159	    003F  66| 50			 push eax
1   160	    0041  66| 52			 push edx
1   161	    0043  56				 push si
1   162	    0044  BE 0002r			 LEA   SI,   requestForInputNumbers
1   163	    0047  33 C9				 XOR   CX,   CX
1   164	    0049  33 D2				 XOR   DX,   DX
1   165	    004B  33 C0				 XOR   AX,   AX
1   166	    004D  E8 0000e			 CALL  PUTSS
1   167	    0050  5E				 pop	 si
1   168	    0051  66| 5A			 pop edx
1   169	    0053  66| 58			 pop eax
1   170	    0055  66| 59			 pop ecx
    171					 ;==============================================
Turbo Assembler	 Version 2.51	     05/11/21 13:35:16	    Page 4
main.ASM



    172					 ;цикл ввода чисел
    173	    0057			 InputCycle:
    174	    0057  3B C8				 cmp cx, ax
    175	    0059  0F 84	007E			 je endInputCycle
    176
    177						 ;==============================================
    178						 ;ввод числа в буфер
    179						 ;проверка на	корректность
    180						 ;запись из буфера в массив структур
    181						 INPUTMAS testStr
1   182	    005D  52				 push dx
1   183	    005E  50				 push ax
1   184	    005F  66| 56			 push esi
1   185	    0061  33 D2				 xor dx, dx
1   186	    0063  B4 0A				 mov ah,0Ah
1   187	    0065  BA 0077r		     lea dx,testStr
1   188	    0068  CD 21			     int 21h
1   189	    006A  66| 8D 36 0077r		 lea esi, testStr
1   190	    006F				 ??0003:
1   191	    006F  67| 80 7E 02 00		 cmp byte ptr[esi+2], 0
1   192	    0074  74 06	90 90			 je ??0002
1   193	    0078  66| 46			 inc esi
1   194	    007A  EB F3				 jmp ??0003
1   195	    007C				 ??0002:
1   196	    007C  67| C6 46 01 00		 mov byte ptr[esi+1], 0
1   197	    0081  66| 5E			 pop esi
1   198	    0083  58				 pop ax
1   199	    0084  5A				 pop dx
    200	    0085  66| 50			 push eax
    201						 CheckStr testStr ;меняется eax
1   202	    0087  E8 0000e			 call checkOnDot
1   203	    008A  66| 83 F8 01			 cmp eax, 1
1   204	    008E  0F 85	0223			 jne inputError
1   205	    0092  E8 0000e			 call checkOnSize
1   206	    0095  66| 83 F8 FF			 cmp eax, -1
1   207	    0099  0F 84	0218			 je inputError
1   208	    009D  E8 0000e			 call checkOnNumber
1   209	    00A0  66| 83 F8 FF			 cmp eax, -1
1   210	    00A4  0F 84	020D			 je inputError
    211	    00A8  66| 58			 pop eax
    212	    00AA  E8 0000e			 call bufferToStruct
    213	    00AD  66| 83 C7 12			 add edi, 18
    214						 ClearMas testStr
1   215	    00B1  66| 56			 push esi
1   216	    00B3  66| 8D 36 0077r		 lea esi, testStr
1   217	    00B8  E8 0000e			 call clearMassive
1   218	    00BB  66| 5E			 pop esi
    219						 ;==============================================
    220
    221
    222
    223
    224						 PUTL empty
1   225	    00BD  66| 51			 push ecx
1   226	    00BF  66| 50			 push eax
1   227	    00C1  66| 52			 push edx
1   228	    00C3  56				 push si
Turbo Assembler	 Version 2.51	     05/11/21 13:35:16	    Page 5
main.ASM



1   229	    00C4  BE 0001r			 LEA   SI,   empty
1   230	    00C7  33 C9				 XOR   CX,   CX
1   231	    00C9  33 D2				 XOR   DX,   DX
1   232	    00CB  33 C0				 XOR   AX,   AX
1   233	    00CD  E8 0000e			 CALL  PUTSS
1   234	    00D0  5E				 pop	 si
1   235	    00D1  66| 5A			 pop edx
1   236	    00D3  66| 58			 pop eax
1   237	    00D5  66| 59			 pop ecx
    238	    00D7  41				 inc cx
    239	    00D8  E9 FF7C			 jmp InputCycle
    240
    241	    00DB			 endInputCycle:
    242					 ;==============================================
    243
    244
    245					 ;==============================================
    246					 ;цикл ввода индексов
    247					 ;записывает индексы в стек
    248	    00DB  BF 01F5r			 lea di, index
    249
    250						 PUTL requestForInputIndex
1   251	    00DE  66| 51			 push ecx
1   252	    00E0  66| 50			 push eax
1   253	    00E2  66| 52			 push edx
1   254	    00E4  56				 push si
1   255	    00E5  BE 001Dr			 LEA   SI,   requestForInputIndex
1   256	    00E8  33 C9				 XOR   CX,   CX
1   257	    00EA  33 D2				 XOR   DX,   DX
1   258	    00EC  33 C0				 XOR   AX,   AX
1   259	    00EE  E8 0000e			 CALL  PUTSS
1   260	    00F1  5E				 pop	 si
1   261	    00F2  66| 5A			 pop edx
1   262	    00F4  66| 58			 pop eax
1   263	    00F6  66| 59			 pop ecx
    264	    00F8  66| 33 C9			 xor ecx, ecx
    265	    00FB  66| 8D 36 0077r		 lea esi, testStr
    266	    0100			 IndexCycle:
    267	    0100  66| 83 F9 03			 cmp ecx, 3
    268	    0104  74 5E	90 90			 je endIndexCycle
    269
    270						 INPUTMAS testStr
1   271	    0108  52				 push dx
1   272	    0109  50				 push ax
1   273	    010A  66| 56			 push esi
1   274	    010C  33 D2				 xor dx, dx
1   275	    010E  B4 0A				 mov ah,0Ah
1   276	    0110  BA 0077r		     lea dx,testStr
1   277	    0113  CD 21			     int 21h
1   278	    0115  66| 8D 36 0077r		 lea esi, testStr
1   279	    011A				 ??0005:
1   280	    011A  67| 80 7E 02 00		 cmp byte ptr[esi+2], 0
1   281	    011F  74 06	90 90			 je ??0004
1   282	    0123  66| 46			 inc esi
1   283	    0125  EB F3				 jmp ??0005
1   284	    0127				 ??0004:
1   285	    0127  67| C6 46 01 00		 mov byte ptr[esi+1], 0
Turbo Assembler	 Version 2.51	     05/11/21 13:35:16	    Page 6
main.ASM



1   286	    012C  66| 5E			 pop esi
1   287	    012E  58				 pop ax
1   288	    012F  5A				 pop dx
    289	    0130  E8 0000e			 call ATOI; меняет AX
    290						 PUTL empty
1   291	    0133  66| 51			 push ecx
1   292	    0135  66| 50			 push eax
1   293	    0137  66| 52			 push edx
1   294	    0139  56				 push si
1   295	    013A  BE 0001r			 LEA   SI,   empty
1   296	    013D  33 C9				 XOR   CX,   CX
1   297	    013F  33 D2				 XOR   DX,   DX
1   298	    0141  33 C0				 XOR   AX,   AX
1   299	    0143  E8 0000e			 CALL  PUTSS
1   300	    0146  5E				 pop	 si
1   301	    0147  66| 5A			 pop edx
1   302	    0149  66| 58			 pop eax
1   303	    014B  66| 59			 pop ecx
    304
    305	    014D  67| 88 07			 mov byte ptr[edi], al
    306	    0150  66| 83 C7 01			 add edi, 1
    307
    308						 ClearMas testStr
1   309	    0154  66| 56			 push esi
1   310	    0156  66| 8D 36 0077r		 lea esi, testStr
1   311	    015B  E8 0000e			 call clearMassive
1   312	    015E  66| 5E			 pop esi
    313	    0160  66| 41			 inc ecx
    314	    0162  EB 9C				 jmp IndexCycle
    315	    0164			 endIndexCycle:
    316					 ;==============================================
    317
    318
    319					 ;==============приведение================================
    320						 PUTL empty
1   321	    0164  66| 51			 push ecx
1   322	    0166  66| 50			 push eax
1   323	    0168  66| 52			 push edx
1   324	    016A  56				 push si
1   325	    016B  BE 0001r			 LEA   SI,   empty
1   326	    016E  33 C9				 XOR   CX,   CX
1   327	    0170  33 D2				 XOR   DX,   DX
1   328	    0172  33 C0				 XOR   AX,   AX
1   329	    0174  E8 0000e			 CALL  PUTSS
1   330	    0177  5E				 pop	 si
1   331	    0178  66| 5A			 pop edx
1   332	    017A  66| 58			 pop eax
1   333	    017C  66| 59			 pop ecx
    334						 ;lea edi, index
    335						 ;getElement
    336						 ;lea edi, array
    337						 ;add edi, eax
    338						 ;call normalize
    339						 ;;;
    340	    017E  66| 33 C9			 xor ecx, ecx
    341	    0181  66| 8D 3E 008Dr		 lea edi, array
    342	    0186				 startPriv:
Turbo Assembler	 Version 2.51	     05/11/21 13:35:16	    Page 7
main.ASM



    343	    0186  66| 83 F9 14			 cmp ecx, 20
    344	    018A  74 0D	90 90			 je endPriv
    345
    346	    018E  E8 0000e			 call normalize
    347	    0191  66| 83 C7 12			 add edi, 18
    348	    0195  66| 41			 inc ecx
    349	    0197  EB ED				 jmp startPriv
    350
    351	    0199				 endPriv:
    352					 ;==============приведение================================
    353
    354					 ;==============поиск минимального====================================
    355					 ;минимальный в edi
    356						 ;;;lea	edi, array+18
    357	    0199  66| 8D 3E 01F6r		 lea edi, index+1
    358						 getElement
1   359	    019E  53				 push bx
1   360	    019F  66| 33 C0			 xor eax,eax
1   361	    01A2  67| 8A 07			 mov al, byte ptr[edi]
1   362	    01A5  B3 12				 mov bl, 18
1   363	    01A7  F6 E3				 mul bl
1   364	    01A9  5B				 pop bx
    365	    01AA  66| 8D 3E 008Dr		 lea edi, array
    366	    01AF  66| 03 F8			 add edi, eax
    367						 ;;;
    368	    01B2  66| 57			 push edi
    369	    01B4  66| 8D 3E 01F7r		 lea edi, index+2
    370						 getElement
1   371	    01B9  53				 push bx
1   372	    01BA  66| 33 C0			 xor eax,eax
1   373	    01BD  67| 8A 07			 mov al, byte ptr[edi]
1   374	    01C0  B3 12				 mov bl, 18
1   375	    01C2  F6 E3				 mul bl
1   376	    01C4  5B				 pop bx
    377	    01C5  66| 8D 3E 008Dr		 lea edi, array
    378	    01CA  66| 03 F8			 add edi, eax
    379	    01CD  66| 8B F7			 mov esi, edi
    380	    01D0  66| 5F			 pop edi
    381
    382	    01D2  E8 0000e			 call changeOperand
    383	    01D5  E8 0000e			 call minimumOperand
    384						 PUTL minElem
1   385	    01D8  66| 51			 push ecx
1   386	    01DA  66| 50			 push eax
1   387	    01DC  66| 52			 push edx
1   388	    01DE  56				 push si
1   389	    01DF  BE 0060r			 LEA   SI,   minElem
1   390	    01E2  33 C9				 XOR   CX,   CX
1   391	    01E4  33 D2				 XOR   DX,   DX
1   392	    01E6  33 C0				 XOR   AX,   AX
1   393	    01E8  E8 0000e			 CALL  PUTSS
1   394	    01EB  5E				 pop	 si
1   395	    01EC  66| 5A			 pop edx
1   396	    01EE  66| 58			 pop eax
1   397	    01F0  66| 59			 pop ecx
    398	    01F2  E8 0000e			 call outStruct
    399						 PUTL empty
Turbo Assembler	 Version 2.51	     05/11/21 13:35:16	    Page 8
main.ASM



1   400	    01F5  66| 51			 push ecx
1   401	    01F7  66| 50			 push eax
1   402	    01F9  66| 52			 push edx
1   403	    01FB  56				 push si
1   404	    01FC  BE 0001r			 LEA   SI,   empty
1   405	    01FF  33 C9				 XOR   CX,   CX
1   406	    0201  33 D2				 XOR   DX,   DX
1   407	    0203  33 C0				 XOR   AX,   AX
1   408	    0205  E8 0000e			 CALL  PUTSS
1   409	    0208  5E				 pop	 si
1   410	    0209  66| 5A			 pop edx
1   411	    020B  66| 58			 pop eax
1   412	    020D  66| 59			 pop ecx
    413						 ;;;
    414					 ;==============поиск минимального====================================
    415
    416
    417
    418					 ;==============замена местами при необходимости 1	и 2	    +
    419					 операндов================================
    420
    421	    020F  66| 8B F7			 mov esi, edi
    422						 ;;;
    423	    0212  66| 8D 3E 01F5r		 lea edi, index
    424						 getElement
1   425	    0217  53				 push bx
1   426	    0218  66| 33 C0			 xor eax,eax
1   427	    021B  67| 8A 07			 mov al, byte ptr[edi]
1   428	    021E  B3 12				 mov bl, 18
1   429	    0220  F6 E3				 mul bl
1   430	    0222  5B				 pop bx
    431	    0223  66| 8D 3E 008Dr		 lea edi, array
    432	    0228  66| 03 F8			 add edi, eax
    433						 ;;;
    434	    022B  E8 0000e			 call changeOperand
    435					 ;==============замена местами при необходимости 1	и 1	    +
    436					 операндов================================
    437
    438
    439
    440					 ;=====================сложение==================================
    441	    022E  67| 80 3F 2B			 cmp byte ptr[edi], '+'
    442	    0232  74 16	90 90			 je secondSIgn
    443	    0236  67| 80 3E 2B			 cmp byte ptr[esi], '+'
    444	    023A  74 08	90 90			 je SecondPlus
    445	    023E  E8 0000e			 call sumOperand
    446	    0241  EB 18	90			 jmp endSUM
    447	    0244				 SecondPlus:
    448	    0244  E8 0000e			 call subtraction
    449	    0247  EB 12	90			 jmp endSUM
    450	    024A				 secondSIgn:
    451	    024A  67| 80 3E 2B			 cmp byte ptr[esi], '+'
    452	    024E  74 08	90 90			 je sum
    453	    0252  E8 0000e			 call subtraction
    454	    0255  EB 04	90			 jmp endSUM
    455	    0258				 sum:
    456	    0258  E8 0000e			 call sumOperand
Turbo Assembler	 Version 2.51	     05/11/21 13:35:16	    Page 9
main.ASM



    457	    025B				 endSUM:
    458					 ;=====================сложение==================================
    459
    460						 ;lea edi, array
    461	    025B  66| 83 F8 01			 cmp eax, 1
    462	    025F  74 1E	90 90			 je jkl
    463	    0263  66| 8D 3E 01F5r			 lea edi, index
    464							 getElement
1   465	    0268  53				 push bx
1   466	    0269  66| 33 C0			 xor eax,eax
1   467	    026C  67| 8A 07			 mov al, byte ptr[edi]
1   468	    026F  B3 12				 mov bl, 18
1   469	    0271  F6 E3				 mul bl
1   470	    0273  5B				 pop bx
    471	    0274  66| 8D 3E 008Dr			 lea edi, array
    472	    0279  66| 03 F8				 add edi, eax
    473	    027C  EB 1A	90				 jmp rtyy
    474	    027F				 jkl:
    475	    027F  66| 8D 3E 01F6r			 lea edi, index+1
    476							 getElement
1   477	    0284  53				 push bx
1   478	    0285  66| 33 C0			 xor eax,eax
1   479	    0288  67| 8A 07			 mov al, byte ptr[edi]
1   480	    028B  B3 12				 mov bl, 18
1   481	    028D  F6 E3				 mul bl
1   482	    028F  5B				 pop bx
    483	    0290  66| 8D 3E 008Dr			 lea edi, array
    484	    0295  66| 03 F8				 add edi, eax
    485	    0298				 rtyy:
    486
    487
    488
    489
    490					 ;==========================
    491					 ;	 lea edi, array
    492					 ;	 call outStruct
    493					 ;	 PUTL empty
    494					 ;	 add edi, 18
    495					 ;	 call outStruct
    496					 ;	 PUTL empty
    497					 ;	 add edi, 18
    498						 PUTL res
1   499	    0298  66| 51			 push ecx
1   500	    029A  66| 50			 push eax
1   501	    029C  66| 52			 push edx
1   502	    029E  56				 push si
1   503	    029F  BE 0070r			 LEA   SI,   res
1   504	    02A2  33 C9				 XOR   CX,   CX
1   505	    02A4  33 D2				 XOR   DX,   DX
1   506	    02A6  33 C0				 XOR   AX,   AX
1   507	    02A8  E8 0000e			 CALL  PUTSS
1   508	    02AB  5E				 pop	 si
1   509	    02AC  66| 5A			 pop edx
1   510	    02AE  66| 58			 pop eax
1   511	    02B0  66| 59			 pop ecx
    512	    02B2  E8 0000e			 call outStruct
    513					 ;==========================
Turbo Assembler	 Version 2.51	     05/11/21 13:35:16	    Page 10
main.ASM



    514
    515	    02B5			 inputError:
    516						 PUTL errString
1   517	    02B5  66| 51			 push ecx
1   518	    02B7  66| 50			 push eax
1   519	    02B9  66| 52			 push edx
1   520	    02BB  56				 push si
1   521	    02BC  BE 002Br			 LEA   SI,   errString
1   522	    02BF  33 C9				 XOR   CX,   CX
1   523	    02C1  33 D2				 XOR   DX,   DX
1   524	    02C3  33 C0				 XOR   AX,   AX
1   525	    02C5  E8 0000e			 CALL  PUTSS
1   526	    02C8  5E				 pop	 si
1   527	    02C9  66| 5A			 pop edx
1   528	    02CB  66| 58			 pop eax
1   529	    02CD  66| 59			 pop ecx
    530
    531
    532	    02CF  B4 4C				 MOV	 AH, 4ch
    533	    02D1  B0 00			     MOV     AL, 0
    534	    02D3  CD 21			     INT     21h
    535						 EXTRN	 PUTSS:NEAR
    536						 EXTRN	 PUTC:NEAR
    537						 EXTRN	 BINtoDEC:NEAR
    538						 EXTRN	 OutMassive:NEAR
    539						 EXTRN	 GETCH:NEAR
    540						 EXTRN	 bufferToStruct:NEAR
    541						 EXTRN	 clearMassive:NEAR
    542						 EXTRN	 checkOnDot:NEAR
    543						 EXTRN	 checkOnSize:NEAR
    544						 EXTRN	 checkOnNumber:NEAR
    545						 EXTRN	 ATOI:NEAR
    546						 EXTRN	 MulFive:NEAR
    547						 EXTRN	 sumOperand:NEAR
    548						 EXTRN	 outStruct:NEAR
    549						 EXTRN	 normalize:NEAR
    550						 EXTRN	 subtraction:NEAR
    551						 EXTRN	 changeOperand:NEAR
    552						 EXTRN	 minimumOperand:NEAR
    553
    554					 END START
Turbo Assembler	 Version 2.51	     05/11/21 13:35:16	    Page 11
Symbol Table




Symbol Name			  Type	 Value

??0000				  Near	 _TEXT:0027
??0001				  Near	 _TEXT:001A
??0002				  Near	 _TEXT:007C
??0003				  Near	 _TEXT:006F
??0004				  Near	 _TEXT:0127
??0005				  Near	 _TEXT:011A
??DATE				  Text	 "05/11/21"
??FILENAME			  Text	 "main	  "
??TIME				  Text	 "13:35:16"
??VERSION			  Number 0205
@CODE				  Text	 _TEXT
@CODESIZE			  Text	 0
@CPU				  Text	 0D0FH
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 MAIN
@MODEL				  Text	 2
@WORDSIZE			  Text	 2
ARRAY				  Struct DGROUP:008D FLOAT
ATOI				  Near	 _TEXT:---- Extern
BINTODEC			  Near	 _TEXT:---- Extern
BUFFERTOSTRUCT			  Near	 _TEXT:---- Extern
CHANGEOPERAND			  Near	 _TEXT:---- Extern
CHECKONDOT			  Near	 _TEXT:---- Extern
CHECKONNUMBER			  Near	 _TEXT:---- Extern
CHECKONSIZE			  Near	 _TEXT:---- Extern
CLEARMASSIVE			  Near	 _TEXT:---- Extern
EMPTY				  Byte	 DGROUP:0001
ENDINDEXCYCLE			  Near	 _TEXT:0164
ENDINPUTCYCLE			  Near	 _TEXT:00DB
ENDPRIV				  Near	 _TEXT:0199
ENDSUM				  Near	 _TEXT:025B
ERRSTRING			  Byte	 DGROUP:002B
GETCH				  Near	 _TEXT:---- Extern
INDEX				  Byte	 DGROUP:01F5
INDEXCYCLE			  Near	 _TEXT:0100
INPUTCYCLE			  Near	 _TEXT:0057
INPUTERROR			  Near	 _TEXT:02B5
JKL				  Near	 _TEXT:027F
MINELEM				  Byte	 DGROUP:0060
MINIMUMOPERAND			  Near	 _TEXT:---- Extern
MULFIVE				  Near	 _TEXT:---- Extern
NORMALIZE			  Near	 _TEXT:---- Extern
OUTMASSIVE			  Near	 _TEXT:---- Extern
OUTSTRUCT			  Near	 _TEXT:---- Extern
PUTC				  Near	 _TEXT:---- Extern
PUTSS				  Near	 _TEXT:---- Extern
QUESTIONS			  Byte	 DGROUP:003C
REQUESTFORINPUTINDEX		  Byte	 DGROUP:001D
REQUESTFORINPUTNUMBERS		  Byte	 DGROUP:0002
RES				  Byte	 DGROUP:0070
RTYY				  Near	 _TEXT:0298
SECONDPLUS			  Near	 _TEXT:0244
Turbo Assembler	 Version 2.51	     05/11/21 13:35:16	    Page 12
Symbol Table



SECONDSIGN			  Near	 _TEXT:024A
START				  Near	 _TEXT:0000
STARTPRIV			  Near	 _TEXT:0186
SUBTRACTION			  Near	 _TEXT:---- Extern
SUM				  Near	 _TEXT:0258
SUMOPERAND			  Near	 _TEXT:---- Extern
TEN				  Byte	 DGROUP:0000
TESTSTR				  Byte	 DGROUP:0077

Macro Name

CHECKSTR
CLEARMAS
GETELEMENT
INPUTMAS
PUTL
PUTLS

Structure Name			  Type	Offset

FLOAT
 SIGN				  Byte	 0000
 INTEGER			  Byte	 0001
 REAL				  Byte	 000B

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  STACK				  16  0200 Para	  Stack	  STACK
  _DATA				  16  01F8 Word	  Public  DATA
_TEXT				  16  02D5 Word	  Public  CODE
