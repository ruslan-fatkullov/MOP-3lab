Turbo Assembler	 Version 2.51	     05/10/21 12:52:41	    Page 1
main.ASM



      1	    0000			 .MODEL	SMALL
      2	    0000			 .STACK	200h
      3					 .386
      4					 INCLUDE macros.mac
1     5					 ; Макрос	вывода строки LINE
1     6					 PUTL	 MACRO LINE
1     7						 push ecx
1     8						 push eax
1     9						 push edx
1    10						 push si
1    11						 LEA   SI,   LINE
1    12						 XOR   CX,   CX
1    13						 XOR   DX,   DX
1    14						 XOR   AX,   AX
1    15						 CALL  PUTSS
1    16						 pop	 si
1    17						 pop edx
1    18						 pop eax
1    19						 pop ecx
1    20						 ENDM
1    21
1    22					 PUTLS	 MACRO LINE
1    23						 PUSH	 SI
1    24						 PUSH	 AX
1    25						 XOR   AX,   AX
1    26					     LEA   SI,	 LINE
1    27					     CALL  PUTSS
1    28						 POP	 AX
1    29						 POP	 SI
1    30					 ENDM
1    31
1    32					 INPUTMAS MACRO	STRING
1    33						 local V0, V1
1    34						 push dx
1    35						 push ax
1    36						 push esi
1    37
1    38						 xor dx, dx
1    39						 mov ah,0Ah
1    40					     lea dx,STRING
1    41					     int 21h
1    42						 lea esi, STRING
1    43
1    44						 V1:
1    45						 cmp byte ptr[esi+2], 0
1    46						 je V0
1    47						 inc esi
1    48						 jmp V1
1    49						 V0:
1    50						 mov byte ptr[esi+1], 0
1    51
1    52
1    53						 pop esi
1    54						 pop ax
1    55						 pop dx
1    56							 ENDM
1    57
Turbo Assembler	 Version 2.51	     05/10/21 12:52:41	    Page 2
main.ASM



1    58
1    59					 ClearMas MACRO	STRING
1    60						 push esi
1    61						 lea esi, STRING
1    62						 call clearMassive
1    63						 pop esi
1    64							 ENDM
1    65					 CheckStr MACRO	STRING
1    66						 call checkOnDot
1    67						 cmp eax, 1
1    68						 jne inputError
1    69						 call checkOnSize
1    70						 cmp eax, -1
1    71						 je inputError
1    72						 call checkOnNumber
1    73						 cmp eax, -1
1    74						 je inputError
1    75							 ENDM
1    76
1    77
1    78
     79	    0000			 .DATA
     80	00000000				 Float	 struc
     81	00000000  01*(01*(2B))				 sign	 db	 1 dup('+')
     82	00000001  01*(0A*(7C))				 integer db	 10 dup('|')
     83	0000000B  01*(07*(3F))				 real	 db	 7 dup('?')
     84	00000012				 Float	 ends
     85
     86
     87	    0000  0A				 ten DB	10d
     88	    0001  00				 empty DB 0
     89	    0002  45 6E	74 65 72 20 66+		 requestForInputNumbers	DB "Enter from 3 to 20 numbers", 0
     90		  72 6F	6D 20 33 20 74+
     91		  6F 20	32 30 20 6E 75+
     92		  6D 62	65 72 73 00
     93	    001D  45 6E	74 65 72 20 69+		 requestForInputIndex DB "Enter	i, j, k", 0
     94		  2C 20	6A 2C 20 6B 00
     95	    002B  64 61	74 61 20 65 6E+		 errString DB "data entry error", 0
     96		  74 72	79 20 65 72 72+
     97		  6F 72	00
     98	    003C  77 61	6E 74 20 74 6F+		 questions	 db	 "want to enter	another	number?	[y|n]",	0
     99		  20 65	6E 74 65 72 20+
    100		  61 6E	6F 74 68 65 72+
    101		  20 6E	75 6D 62 65 72+
    102		  3F 20	5B 79 7C 6E 5D+
    103		  00
    104	    0060  14				 testStr db 20
    105	    0061  15*(??)				 db 21 dup(?)
    106
    107	    0076  14*(01*(2B) 0A*(7C) +		 array	 Float	 20	 dup(<>)
    108		  07*(3F))
    109	    01DE			 .CODE
    110	    0000			 START:
    111	    0000  B8 0000s			 mov ax,@data
    112	    0003  8E D8			     mov ds,ax
    113
    114	    0005  66| B9 00000000		 mov ecx, 0
Turbo Assembler	 Version 2.51	     05/10/21 12:52:41	    Page 3
main.ASM



    115
    116	    000B  66| 8D 36 0060r		 lea esi, testStr
    117	    0010  66| 8D 3E 0076r		 lea edi, array
    118
    119
    120						 PUTL requestForInputNumbers
1   121	    0015  66| 51			 push ecx
1   122	    0017  66| 50			 push eax
1   123	    0019  66| 52			 push edx
1   124	    001B  56				 push si
1   125	    001C  BE 0002r			 LEA   SI,   requestForInputNumbers
1   126	    001F  33 C9				 XOR   CX,   CX
1   127	    0021  33 D2				 XOR   DX,   DX
1   128	    0023  33 C0				 XOR   AX,   AX
1   129	    0025  E8 0000e			 CALL  PUTSS
1   130	    0028  5E				 pop	 si
1   131	    0029  66| 5A			 pop edx
1   132	    002B  66| 58			 pop eax
1   133	    002D  66| 59			 pop ecx
    134					 ;==============================================
    135					 ;цикл ввода чисел
    136	    002F			 InputCycle:
    137	    002F  66| 83 F9 02			 cmp ecx, 2
    138	    0033  0F 84	007E			 je endInputCycle
    139
    140						 ;==============================================
    141						 ;ввод числа в буфер
    142						 ;проверка на	корректность
    143						 ;запись из буфера в массив структур
    144						 INPUTMAS testStr
1   145	    0037  52				 push dx
1   146	    0038  50				 push ax
1   147	    0039  66| 56			 push esi
1   148	    003B  33 D2				 xor dx, dx
1   149	    003D  B4 0A				 mov ah,0Ah
1   150	    003F  BA 0060r		     lea dx,testStr
1   151	    0042  CD 21			     int 21h
1   152	    0044  66| 8D 36 0060r		 lea esi, testStr
1   153	    0049				 ??0001:
1   154	    0049  67| 80 7E 02 00		 cmp byte ptr[esi+2], 0
1   155	    004E  74 06	90 90			 je ??0000
1   156	    0052  66| 46			 inc esi
1   157	    0054  EB F3				 jmp ??0001
1   158	    0056				 ??0000:
1   159	    0056  67| C6 46 01 00		 mov byte ptr[esi+1], 0
1   160	    005B  66| 5E			 pop esi
1   161	    005D  58				 pop ax
1   162	    005E  5A				 pop dx
    163	    005F  66| 50			 push eax
    164						 CheckStr testStr ;меняется eax
1   165	    0061  E8 0000e			 call checkOnDot
1   166	    0064  66| 83 F8 01			 cmp eax, 1
1   167	    0068  75 31	90 90			 jne inputError
1   168	    006C  E8 0000e			 call checkOnSize
1   169	    006F  66| 83 F8 FF			 cmp eax, -1
1   170	    0073  74 26	90 90			 je inputError
1   171	    0077  E8 0000e			 call checkOnNumber
Turbo Assembler	 Version 2.51	     05/10/21 12:52:41	    Page 4
main.ASM



1   172	    007A  66| 83 F8 FF			 cmp eax, -1
1   173	    007E  74 1B	90 90			 je inputError
    174	    0082  66| 58			 pop eax
    175	    0084  E8 0000e			 call bufferToStruct
    176	    0087  66| 83 C7 12			 add edi, 18
    177						 ClearMas testStr
1   178	    008B  66| 56			 push esi
1   179	    008D  66| 8D 36 0060r		 lea esi, testStr
1   180	    0092  E8 0000e			 call clearMassive
1   181	    0095  66| 5E			 pop esi
    182						 ;==============================================
    183
    184	    0097  66| 41			 inc ecx
    185	    0099  EB 94				 jmp InputCycle
    186	    009B			 inputError:
    187						 PUTL errString
1   188	    009B  66| 51			 push ecx
1   189	    009D  66| 50			 push eax
1   190	    009F  66| 52			 push edx
1   191	    00A1  56				 push si
1   192	    00A2  BE 002Br			 LEA   SI,   errString
1   193	    00A5  33 C9				 XOR   CX,   CX
1   194	    00A7  33 D2				 XOR   DX,   DX
1   195	    00A9  33 C0				 XOR   AX,   AX
1   196	    00AB  E8 0000e			 CALL  PUTSS
1   197	    00AE  5E				 pop	 si
1   198	    00AF  66| 5A			 pop edx
1   199	    00B1  66| 58			 pop eax
1   200	    00B3  66| 59			 pop ecx
    201	    00B5			 endInputCycle:
    202					 ;==============================================
    203
    204						 PUTL empty
1   205	    00B5  66| 51			 push ecx
1   206	    00B7  66| 50			 push eax
1   207	    00B9  66| 52			 push edx
1   208	    00BB  56				 push si
1   209	    00BC  BE 0001r			 LEA   SI,   empty
1   210	    00BF  33 C9				 XOR   CX,   CX
1   211	    00C1  33 D2				 XOR   DX,   DX
1   212	    00C3  33 C0				 XOR   AX,   AX
1   213	    00C5  E8 0000e			 CALL  PUTSS
1   214	    00C8  5E				 pop	 si
1   215	    00C9  66| 5A			 pop edx
1   216	    00CB  66| 58			 pop eax
1   217	    00CD  66| 59			 pop ecx
    218	    00CF  66| 8D 3E 0076r		 lea edi, array
    219	    00D4  66| 8D 36 0076r		 lea esi, array
    220	    00D9  66| 83 C6 12			 add esi, 18
    221
    222	    00DD  E8 0000e			 call normalize
    223	    00E0  66| 8B FE			 mov edi, esi
    224	    00E3  E8 0000e			 call normalize
    225
    226	    00E6  66| 8D 3E 0076r		 lea edi, array
    227	    00EB  E8 0000e			 call subtraction
    228
Turbo Assembler	 Version 2.51	     05/10/21 12:52:41	    Page 5
main.ASM



    229	    00EE  66| 8D 3E 0076r		 lea edi, array
    230	    00F3  E8 0000e			 call outStruct
    231
    232					 ;==============================================
    233					 ;цикл ввода индексов
    234					 ;записывает индексы в стек
    235					 ;	 PUTL requestForInputIndex
    236					 ;	 xor ecx, ecx
    237					 ;	 lea esi, testStr
    238					 ;IndexCycle:
    239					 ;	 cmp ecx, 3
    240					 ;	 je endIndexCycle
    241					 ;
    242					 ;	 INPUTMAS testStr
    243					 ;	 call ATOI; меняет AX
    244					 ;	 PUTL empty
    245					 ;	 call BINtoDEC
    246					 ;	 push ax
    247					 ;	 ClearMas testStr
    248					 ;	 inc ecx
    249					 ;	 jmp IndexCycle
    250					 ;endIndexCycle:
    251					 ;==============================================
    252
    253
    254	    00F6  B4 4C				 MOV	 AH, 4ch
    255	    00F8  B0 00			     MOV     AL, 0
    256	    00FA  CD 21			     INT     21h
    257						 EXTRN	 PUTSS:NEAR
    258						 EXTRN	 PUTC:NEAR
    259						 EXTRN	 BINtoDEC:NEAR
    260						 EXTRN	 OutMassive:NEAR
    261						 EXTRN	 GETCH:NEAR
    262						 EXTRN	 bufferToStruct:NEAR
    263						 EXTRN	 clearMassive:NEAR
    264						 EXTRN	 checkOnDot:NEAR
    265						 EXTRN	 checkOnSize:NEAR
    266						 EXTRN	 checkOnNumber:NEAR
    267						 EXTRN	 ATOI:NEAR
    268						 EXTRN	 MulFive:NEAR
    269						 EXTRN	 sumOperand:NEAR
    270						 EXTRN	 outStruct:NEAR
    271						 EXTRN	 normalize:NEAR
    272						 EXTRN	 subtraction:NEAR
    273
    274
    275					 END START
Turbo Assembler	 Version 2.51	     05/10/21 12:52:41	    Page 6
Symbol Table




Symbol Name			  Type	 Value

??0000				  Near	 _TEXT:0056
??0001				  Near	 _TEXT:0049
??DATE				  Text	 "05/10/21"
??FILENAME			  Text	 "main	  "
??TIME				  Text	 "12:52:40"
??VERSION			  Number 0205
@CODE				  Text	 _TEXT
@CODESIZE			  Text	 0
@CPU				  Text	 0D0FH
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 MAIN
@MODEL				  Text	 2
@WORDSIZE			  Text	 2
ARRAY				  Struct DGROUP:0076 FLOAT
ATOI				  Near	 _TEXT:---- Extern
BINTODEC			  Near	 _TEXT:---- Extern
BUFFERTOSTRUCT			  Near	 _TEXT:---- Extern
CHECKONDOT			  Near	 _TEXT:---- Extern
CHECKONNUMBER			  Near	 _TEXT:---- Extern
CHECKONSIZE			  Near	 _TEXT:---- Extern
CLEARMASSIVE			  Near	 _TEXT:---- Extern
EMPTY				  Byte	 DGROUP:0001
ENDINPUTCYCLE			  Near	 _TEXT:00B5
ERRSTRING			  Byte	 DGROUP:002B
GETCH				  Near	 _TEXT:---- Extern
INPUTCYCLE			  Near	 _TEXT:002F
INPUTERROR			  Near	 _TEXT:009B
MULFIVE				  Near	 _TEXT:---- Extern
NORMALIZE			  Near	 _TEXT:---- Extern
OUTMASSIVE			  Near	 _TEXT:---- Extern
OUTSTRUCT			  Near	 _TEXT:---- Extern
PUTC				  Near	 _TEXT:---- Extern
PUTSS				  Near	 _TEXT:---- Extern
QUESTIONS			  Byte	 DGROUP:003C
REQUESTFORINPUTINDEX		  Byte	 DGROUP:001D
REQUESTFORINPUTNUMBERS		  Byte	 DGROUP:0002
START				  Near	 _TEXT:0000
SUBTRACTION			  Near	 _TEXT:---- Extern
SUMOPERAND			  Near	 _TEXT:---- Extern
TEN				  Byte	 DGROUP:0000
TESTSTR				  Byte	 DGROUP:0060

Macro Name

CHECKSTR
CLEARMAS
INPUTMAS
PUTL
PUTLS
Turbo Assembler	 Version 2.51	     05/10/21 12:52:41	    Page 7
Symbol Table




Structure Name			  Type	Offset

FLOAT
 SIGN				  Byte	 0000
 INTEGER			  Byte	 0001
 REAL				  Byte	 000B

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  STACK				  16  0200 Para	  Stack	  STACK
  _DATA				  16  01DE Word	  Public  DATA
_TEXT				  16  00FC Word	  Public  CODE
