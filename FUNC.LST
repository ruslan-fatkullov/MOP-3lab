Turbo Assembler	 Version 2.51	     05/11/21 13:35:17	    Page 1
func.ASM



      1	    0000			 MODEL SMALL
      2	    0000			 .CODE
      3					 .386
      4					 INCLUDE macros.mac
1     5					 ; Макрос	вывода строки LINE
1     6					 PUTL	 MACRO LINE
1     7						 push ecx
1     8						 push eax
1     9						 push edx
1    10						 push si
1    11						 LEA   SI,   LINE
1    12						 XOR   CX,   CX
1    13						 XOR   DX,   DX
1    14						 XOR   AX,   AX
1    15						 CALL  PUTSS
1    16						 pop	 si
1    17						 pop edx
1    18						 pop eax
1    19						 pop ecx
1    20						 ENDM
1    21
1    22					 PUTLS	 MACRO LINE
1    23						 PUSH	 SI
1    24						 PUSH	 AX
1    25						 XOR   AX,   AX
1    26					     LEA   SI,	 LINE
1    27					     CALL  PUTSS
1    28						 POP	 AX
1    29						 POP	 SI
1    30					 ENDM
1    31
1    32					 INPUTMAS MACRO	STRING
1    33						 local V0, V1
1    34						 push dx
1    35						 push ax
1    36						 push esi
1    37
1    38						 xor dx, dx
1    39						 mov ah,0Ah
1    40					     lea dx,STRING
1    41					     int 21h
1    42						 lea esi, STRING
1    43
1    44						 V1:
1    45						 cmp byte ptr[esi+2], 0
1    46						 je V0
1    47						 inc esi
1    48						 jmp V1
1    49						 V0:
1    50						 mov byte ptr[esi+1], 0
1    51
1    52
1    53						 pop esi
1    54						 pop ax
1    55						 pop dx
1    56							 ENDM
1    57
Turbo Assembler	 Version 2.51	     05/11/21 13:35:17	    Page 2
func.ASM



1    58					 getElement MACRO
1    59							 ;;;
1    60						 push bx
1    61						 xor eax,eax
1    62						 mov al, byte ptr[edi]
1    63						 mov bl, 18
1    64						 mul bl
1    65						 pop bx
1    66						 ;;;
1    67							 ENDM
1    68					 ClearMas MACRO	STRING
1    69						 push esi
1    70						 lea esi, STRING
1    71						 call clearMassive
1    72						 pop esi
1    73							 ENDM
1    74					 CheckStr MACRO	STRING
1    75						 call checkOnDot
1    76						 cmp eax, 1
1    77						 jne inputError
1    78						 call checkOnSize
1    79						 cmp eax, -1
1    80						 je inputError
1    81						 call checkOnNumber
1    82						 cmp eax, -1
1    83						 je inputError
1    84							 ENDM
1    85
1    86
1    87
     88
     89					  LOCALS
     90
     91					 ;==============================================
     92					 ; Подпрограмма ввода символа в AL с терминала
     93					 ;==============================================
     94	    0000			 GETCH	 PROC	 NEAR
     95	    0000  B4 08				 MOV	 AH,   8
     96	    0002  CD 21				 INT	 21h
     97	    0004  C3				 RET
     98	    0005			 GETCH	 ENDP
     99					 ;=====================================================
    100					 ; Подпрограмма вывода на экран строки, адресуемой +
    101					 SI,
    102					 ; с задержкой времени	между символами в <CX,DX> mcs.
    103					 ; Завершителями строки являеются байты 0 или 0FFh.
    104					 ; ЕСЛИ строка заканчивается байтом 0,
    105					 ;   ТО добавляется переход	в начало	новой строки
    106					 ;
    107					 ;=====================================================
    108	    0005			 PUTSS	 PROC	 NEAR
    109	    0005  8A 04			 @@L:	 MOV	 AL,	 [SI]
    110	    0007  3C FF				 CMP	 AL,	 0FFH
    111	    0009  74 18	90 90			 JE	 @@R
    112	    000D  3C 00				 CMP	 AL,	 0
    113	    000F  74 08	90 90			 JZ	 @@E
    114	    0013  E8 000E			 CALL	 PUTC
Turbo Assembler	 Version 2.51	     05/11/21 13:35:17	    Page 3
func.ASM



    115	    0016  46				 INC	 SI
    116	    0017  EB EC				 JMP	 SHORT @@L
    117						 ; Переход на следующую строку
    118	    0019  B0 0D			 @@E:	 MOV	 AL, 13
    119	    001B  E8 0006			 CALL	 PUTC
    120	    001E  B0 0A				 MOV	 AL, 10
    121	    0020  E8 0001			 CALL	 PUTC
    122	    0023  C3			 @@R:	 RET
    123	    0024			 PUTSS	 ENDP
    124
    125					 ;==============================================
    126					 ; Подпрограмма вывода AL на терминал
    127					 ;==============================================
    128	    0024			 PUTC	 PROC	 NEAR
    129	    0024  52				 PUSH	 DX
    130	    0025  8A D0				 MOV	 DL,   AL
    131	    0027  B4 02				 MOV	 AH,   2
    132	    0029  CD 21				 INT	 21h
    133	    002B  5A				 POP	 DX
    134	    002C  C3				 RET
    135	    002D			 PUTC	 ENDP
    136
    137
    138
    139					 ;==============================================
    140					 ; Подпрограмма вывода числа на экран в
    141					 ; в десятичном виде из регистра AX
    142					 ;==============================================
    143	    002D			 BINtoDEC	 PROC	 NEAR
    144	    002D  51				 push cx
    145	    002E  52				 push dx
    146	    002F  50				 push ax
    147
    148	    0030  33 C9			     xor cx, cx
    149	    0032				 decr:
    150	    0032  41			     inc cx
    151	    0033  33 D2			     xor dx, dx
    152	    0035  BB 000A		     mov bx, 10
    153	    0038  F7 F3			     div bx
    154	    003A  52			     push dx
    155	    003B  3D 0000		     cmp ax, 0
    156	    003E  75 F2			     jne decr
    157
    158	    0040				 print:
    159	    0040  B4 02			     mov ah, 02h
    160	    0042  33 D2			     xor dx, dx
    161	    0044  5A			     pop dx
    162	    0045  83 C2	30		     add dx, '0'
    163	    0048  CD 21			     int 21h
    164	    004A  E2 F4			     loop print
    165
    166	    004C  58				 pop ax
    167	    004D  5A				 pop dx
    168	    004E  59				 pop cx
    169	    004F  C3					 ret
    170	    0050			 BINtoDEC	 ENDP
    171					 ;==============================================
Turbo Assembler	 Version 2.51	     05/11/21 13:35:17	    Page 4
func.ASM



    172					 ; Подпрограмма проверки строки на содержание	    +
    173					 одной точки
    174					 ; input - esi - адресс строки
    175					 ;==============================================
    176	    0050			 checkOnDot	 PROC	 NEAR
    177	    0050  66| 56			 push esi
    178
    179	    0052  66| 33 C0			 xor eax, eax
    180	    0055  66| 83 C6 02			 add esi, 2
    181	    0059				 startCheck:
    182	    0059  67| 80 3E 00			 cmp byte ptr[esi], 0
    183	    005D  74 14	90 90			 je endCheck
    184	    0061  67| 80 3E 2E			 cmp byte ptr[esi], '.'
    185	    0065  75 08	90 90			 jne middleCheck1
    186	    0069  66| 40			 inc eax
    187	    006B  66| 46			 inc esi
    188	    006D  EB EA				 jmp startCheck
    189	    006F				 middleCheck1:
    190	    006F  66| 46			 inc esi
    191	    0071  EB E6				 jmp startCheck
    192
    193	    0073				 endCheck:
    194	    0073  66| 5E			 pop esi
    195	    0075  C3				 ret
    196	    0076			 checkOnDot	 ENDP
    197					 ;==============================================
    198					 ; Подпрограмма проверки строки на				    +
    199					 непереполненность
    200					 ; input - esi - адресс строки
    201					 ;==============================================
    202	    0076			 checkOnSize	 PROC	 NEAR
    203	    0076  66| 56			 push esi
    204
    205	    0078  66| 33 C0			 xor eax, eax
    206	    007B  66| 83 C6 02			 add esi, 2
    207						 ;проверка на	минус
    208	    007F  67| 80 3E 2D			 cmp byte ptr[esi], '-'
    209	    0083  75 04	90 90			 jne CheckInteger
    210	    0087  66| 46			 inc esi
    211
    212	    0089				 CheckInteger:
    213	    0089  67| 80 3E 2E			 cmp byte ptr[esi], '.'
    214	    008D  74 08	90 90			 je CheckReal
    215	    0091  66| 40			 inc eax
    216	    0093  66| 46			 inc esi
    217	    0095  EB F2				 jmp CheckInteger
    218
    219	    0097				 CheckReal:
    220	    0097  66| 46			 inc esi
    221	    0099  66| 83 F8 0A			 cmp eax, 10
    222	    009D  7F 1B	90 90			 jg errorSize
    223
    224	    00A1  66| 33 C0			 xor eax, eax
    225	    00A4				 CheckReal1:
    226	    00A4  67| 80 3E 00			 cmp byte ptr[esi], 0
    227	    00A8  74 08	90 90			 je endCheckReal
    228	    00AC  66| 40			 inc eax
Turbo Assembler	 Version 2.51	     05/11/21 13:35:17	    Page 5
func.ASM



    229	    00AE  66| 46			 inc esi
    230	    00B0  EB F2				 jmp CheckReal1
    231
    232	    00B2				 endCheckReal:
    233	    00B2  66| 83 F8 07			 cmp eax, 7
    234	    00B6  7E 08	90 90			 jle endCheckSize
    235
    236	    00BA				 errorSize:
    237	    00BA  66| B8 FFFFFFFF		 mov eax, -1
    238
    239	    00C0				 endCheckSize:
    240	    00C0  66| 5E			 pop esi
    241	    00C2  C3				 ret
    242	    00C3			 checkOnSize	 ENDP
    243					 ;==============================================
    244					 ; Подпрограмма проверки строки ввод цифр
    245					 ; input - esi - адресс строки
    246					 ;==============================================
    247	    00C3			 checkOnNumber	 PROC	 NEAR
    248	    00C3  66| 56			 push esi
    249	    00C5  66| 33 C0			 xor eax, eax
    250	    00C8  66| 83 C6 02			 add esi, 2
    251						 ;проверка на	минус
    252	    00CC  67| 80 3E 2D			 cmp byte ptr[esi], '-'
    253	    00D0  75 04	90 90			 jne CheckNumber
    254	    00D4  66| 46			 inc esi
    255	    00D6				 CheckNumber:
    256	    00D6  67| 80 3E 00			 cmp byte ptr[esi], 0
    257	    00DA  74 24	90 90			 je endCheckNumber
    258	    00DE  67| 80 3E 2E			 cmp byte ptr[esi], '.'
    259	    00E2  74 12	90 90			 je incrementESI
    260	    00E6  67| 80 3E 30			 cmp byte ptr[esi], '0'
    261	    00EA  7C 0E	90 90			 jl errorNumber
    262	    00EE  67| 80 3E 39			 cmp byte ptr[esi], '9'
    263	    00F2  7F 06	90 90			 jg errorNumber
    264
    265	    00F6				 incrementESI:
    266	    00F6  66| 46			 inc esi
    267	    00F8  EB DC				 jmp CheckNumber
    268
    269	    00FA				 errorNumber:
    270	    00FA  66| B8 FFFFFFFF		 mov eax, -1
    271
    272	    0100				 endCheckNumber:
    273	    0100  66| 5E			 pop esi
    274	    0102  C3				 ret
    275	    0103			 checkOnNumber	 ENDP
    276					 ;==============================================
    277					 ; Подпрограмма записи из буферной строки
    278					 ; в массив структур
    279					 ; input - esi - адрес строки
    280					 ;		   edi - адрес структуры
    281					 ;==============================================
    282	    0103			 bufferToStruct	 PROC	 NEAR
    283	    0103  66| 56		     push esi
    284	    0105  66| 57			 push edi
    285	    0107  66| 52			 push edx
Turbo Assembler	 Version 2.51	     05/11/21 13:35:17	    Page 6
func.ASM



    286	    0109  66| 50			 push eax
    287
    288	    010B  66| 8B C7			 mov eax, edi
    289	    010E  66| 33 D2			 xor edx, edx
    290	    0111  66| 83 C6 02			 add esi, 2
    291
    292	    0115				 sign:
    293	    0115  67| 80 3E 2D			 cmp byte ptr[esi], '-'
    294	    0119  75 0A	90 90			 jne integer
    295	    011D  67| 8A 16			 mov dl, byte ptr[esi]
    296	    0120  67| 88 17			 mov byte ptr[edi], dl
    297	    0123  66| 46			 inc esi
    298
    299	    0125				 integer:
    300	    0125  66| 47			 inc edi
    301	    0127				 integer1:
    302	    0127  67| 80 3E 2E			 cmp byte ptr[esi], '.'
    303	    012B  74 0E	90 90			 je real
    304
    305	    012F  67| 8A 16			 mov dl, byte ptr[esi]
    306	    0132  67| 88 17			 mov byte ptr[edi], dl
    307	    0135  66| 46			 inc esi
    308	    0137  66| 47			 inc edi
    309	    0139  EB EC				 jmp integer1
    310
    311	    013B				 real:
    312	    013B  66| 46			 inc esi
    313	    013D  66| 8B F8			 mov edi, eax
    314	    0140  66| 83 C7 0B			 add edi, 11
    315	    0144				 real1:
    316	    0144  67| 80 3E 00			 cmp byte ptr[esi], 0
    317	    0148  74 0E	90 90			 je endCycle
    318
    319	    014C  67| 8A 16			 mov dl, byte ptr[esi]
    320	    014F  67| 88 17			 mov byte ptr[edi], dl
    321	    0152  66| 46			 inc esi
    322	    0154  66| 47			 inc edi
    323	    0156  EB EC				 jmp real1
    324
    325
    326	    0158				 endCycle:
    327	    0158  66| 58			 pop eax
    328	    015A  66| 5A			 pop edx
    329	    015C  66| 5F			 pop edi
    330	    015E  66| 5E			 pop esi
    331	    0160  C3					 ret
    332	    0161			 bufferToStruct	 ENDP
    333					 ;==============================================
    334					 ; Подпрограмма очистки массива
    335					 ; input esi - адрес массива
    336					 ;==============================================
    337	    0161			 clearMassive	 PROC	 NEAR
    338	    0161				 startClear:
    339	    0161  67| 80 7E 02 00		 cmp byte ptr[esi+2], 0
    340	    0166  74 0B	90 90			 je exitClear
    341	    016A  67| C6 46 02 00		 mov byte ptr[esi+2], 0
    342	    016F  66| 46			 inc esi
Turbo Assembler	 Version 2.51	     05/11/21 13:35:17	    Page 7
func.ASM



    343	    0171  EB EE				 jmp startClear
    344
    345	    0173				 exitClear:
    346	    0173  C3				 ret
    347	    0174			 clearMassive	 ENDP
    348
    349
    350					 ;==============================================
    351					 ; Подпрограмма вывода массива
    352					 ;==============================================
    353	    0174			 OutMassive	 PROC	 NEAR
    354	    0174			     M01:
    355	    0174  80 7C	02 24			 cmp byte ptr[si+2], '$'
    356	    0178  74 0C	90 90			 je endOf
    357	    017C  B4 02				 mov ah, 02h
    358	    017E  8A 54	02			 mov dl, byte ptr[si+2]
    359	    0181  CD 21				 int 21h
    360	    0183  46				 inc SI
    361	    0184  EB EE				 jmp M01
    362	    0186				 endOf:
    363	    0186  C3				 ret
    364	    0187			 OutMassive	 ENDP
    365
    366					 ;=================================================
    367					 ; Процедура для перевода строки в десятичное число
    368					 ;
    369					 ; Входные данные:	SI - адрес	строки
    370					 ; Выходные данные: AX - десятеричное	число
    371					 ;=================================================
    372	    0187			 ATOI	 PROC	 NEAR
    373	    0187  53				 PUSH	 BX
    374	    0188  56				 PUSH si
    375	    0189  33 DB				 XOR	 BX,	 BX
    376	    018B  33 C0				 XOR	 AX,	 AX
    377
    378	    018D				 @@CONVERT:
    379	    018D  8A 5C	02				 MOV	 BL,	 [SI + 2]
    380	    0190  80 FB	00				 CMP	 BL,	 0
    381	    0193  74 1E	90 90				 JZ	 @@EXIT
    382
    383	    0197  80 FB	30				 CMP	 BL,	 '0'
    384	    019A  7C 14	90 90				 JL	 @@ERROR
    385	    019E  80 FB	39				 CMP	 BL,	 '9'
    386	    01A1  7F 0D	90 90				 JG	 @@ERROR
    387
    388	    01A5  80 EB	30				 SUB	 BL,	 '0'
    389	    01A8  6B C0	0A				 IMUL	 AX,	 10
    390	    01AB  03 C3					 ADD	 AX, BX
    391
    392	    01AD  46					 INC	 SI
    393	    01AE  EB DD					 JMP	 @@CONVERT
    394
    395	    01B0				 @@ERROR:
    396	    01B0  B8 FFFF				 MOV	 AX, -1
    397	    01B3				 @@EXIT:
    398	    01B3  5E					 POP si
    399	    01B4  5B					 POP	 BX
Turbo Assembler	 Version 2.51	     05/11/21 13:35:17	    Page 8
func.ASM



    400	    01B5  C3					 RET
    401	    01B6			 ATOI	 ENDP
    402
    403					 ;=================================================
    404					 ; Процедура умножения на 5
    405					 ; input - edi - адрес массива
    406					 ;=================================================
    407	    01B6			 MulFive PROC	 NEAR
    408	    01B6  66| 57			 push edi
    409	    01B8  66| 51			 push ecx
    410	    01BA  66| 53			 push ebx
    411	    01BC  66| 50			 push eax
    412	    01BE  66| 52			 push edx
    413
    414	    01C0  66| 8B CF			 mov ecx, edi
    415	    01C3  66| 83 C7 11			 add edi, 17
    416	    01C7  B0 00				 mov al, 0
    417	    01C9				 startMulFive:
    418	    01C9  66| 3B F9			 cmp edi, ecx
    419	    01CC  74 1F	90 90			 je endMulFive
    420
    421
    422	    01D0  67| 80 3F 30			 cmp byte ptr[edi], '0'
    423	    01D4  7C 13	90 90			 jl YUI
    424	    01D8  67| 80 3F 39			 cmp byte ptr[edi], '9'
    425	    01DC  7F 0B	90 90			 jg YUI
    426
    427	    01E0  67| 8A 17			 mov dl, byte ptr[edi]
    428	    01E3  E8 0033			 call calcFive
    429
    430	    01E6  67| 88 17			 mov byte ptr[edi] , dl
    431
    432	    01E9				 YUI:
    433	    01E9  66| 4F			 dec edi
    434	    01EB  EB DC				 jmp startMulFive
    435	    01ED				 endMulFive:
    436
    437	    01ED  3C 00				 cmp al, 0
    438	    01EF  74 1D	90 90			 je endMulFive1
    439	    01F3  66| 83 C1 0A			 add ecx, 10
    440	    01F7  04 30				 add al, '0'
    441	    01F9				 wqer:
    442	    01F9  66| 3B F9			 cmp edi, ecx
    443	    01FC  74 10	90 90			 je endMulFive1
    444
    445	    0200  67| 8A 5F 01			 mov bl, byte ptr[edi+1]
    446	    0204  67| 88 47 01			 mov byte ptr[edi+1] , al
    447	    0208  8A C3				 mov al, bl
    448
    449	    020A  66| 47			 inc edi
    450	    020C  EB EB				 jmp wqer
    451	    020E				 endMulFive1:
    452
    453	    020E  66| 5A			 pop edx
    454	    0210  66| 58			 pop eax
    455	    0212  66| 5B			 pop ebx
    456	    0214  66| 59			 pop ecx
Turbo Assembler	 Version 2.51	     05/11/21 13:35:17	    Page 9
func.ASM



    457	    0216  66| 5F			 pop edi
    458	    0218  C3					 RET
    459	    0219			 MulFive ENDP
    460					 ;=================================================
    461					 ; умножение на 5 символа
    462					 ; input - dl -	цифра
    463					 ;=================================================
    464	    0219			 calcFive	 PROC	 NEAR
    465	    0219  50				 push ax
    466	    021A  80 EA	30			 sub dl, '0'
    467	    021D  8A C2				 mov al, dl
    468	    021F  B3 05				 mov bl, 5
    469	    0221  F6 E3				 mul bl
    470	    0223  02 D0				 add dl, al
    471	    0225  5B				 pop bx
    472	    0226  02 C3				 add al, bl
    473	    0228  B3 0A				 mov bl, 10
    474	    022A  F6 F3				 div bl
    475	    022C  8A D4				 mov dl, ah
    476	    022E  80 C2	30			 add dl, '0'
    477
    478	    0231  C3					 RET
    479	    0232			 calcFive	 ENDP
    480					 ;=================================================
    481					 ; Процедура сложения двух	операндов
    482					 ; к большему - меньший
    483					 ; input - edi и esi -	элементы массива
    484					 ;=================================================
    485	    0232			 sumOperand	 PROC	 NEAR
    486	    0232  66| 50			 push eax
    487	    0234  66| 57			 push edi
    488	    0236  66| 56			 push esi
    489
    490	    0238  66| 8B CF			 mov ecx, edi
    491	    023B  66| 83 C7 11			 add edi, 17
    492	    023F  66| 83 C6 11			 add esi, 17
    493	    0243  B2 00				 mov dl, 0
    494	    0245  B4 00				 mov ah, 0
    495	    0247  B7 00				 mov bh, 0
    496	    0249  EB 05	90			 jmp startSum
    497
    498	    024C				 decrementSum:
    499	    024C  66| 4F			 dec edi
    500	    024E  66| 4E			 dec esi
    501	    0250				 startSum:
    502
    503	    0250  66| 3B F9			 cmp edi, ecx
    504	    0253  74 37	90 90			 je endSumOperation
    505
    506	    0257  67| 80 3F 39			 cmp byte ptr[edi], '9'
    507	    025B  7F 0B	90 90			 jg firstSign
    508	    025F  67| 80 3E 39			 cmp byte ptr[esi], '9'
    509	    0263  7F E7				 jg decrementSum
    510	    0265  EB 20	90			 jmp calc
    511
    512	    0268				 firstSign:
    513	    0268  67| 80 3E 39			 cmp byte ptr[esi], '9'
Turbo Assembler	 Version 2.51	     05/11/21 13:35:17	    Page 10
func.ASM



    514	    026C  7E 19	90 90			 jle calc
    515	    0270				 temp:
    516	    0270  67| 80 3F 7C			 cmp byte ptr[edi], '|'
    517	    0274  75 0F	90 90			 jne notEnd
    518	    0278  80 FA	00			 cmp dl,0
    519	    027B  74 08	90 90			 je notEnd
    520	    027F  67| C6 07 31			 mov byte ptr[edi], '1'
    521	    0283  B2 00				 mov dl, 0
    522	    0285				 notEnd:
    523	    0285  EB C5				 jmp decrementSum
    524
    525	    0287				 calc:
    526	    0287  E8 0009			 call sumNumbers
    527	    028A  EB C0				 jmp decrementSum
    528						 ;;;;;;;;;;;;;;;;;;;;;
    529	    028C				 endSumOperation:
    530
    531
    532	    028C  66| 5E			 pop esi
    533	    028E  66| 5F			 pop edi
    534	    0290  66| 58			 pop eax
    535	    0292  C3					 RET
    536	    0293			 sumOperand	 ENDP
    537					 ;=================================================
    538					 ; Процедура сложения двух	цифр
    539					 ;
    540					 ; input - edi - цифра
    541					 ; output bx - флаг	переполнения
    542					 ;=================================================
    543	    0293			 sumNumbers	 PROC	 NEAR
    544	    0293  67| 8A 07			 mov al, byte ptr[edi]
    545	    0296  67| 8A 1E			 mov bl, byte ptr[esi]
    546	    0299  3C 39				 cmp al, '9'
    547	    029B  7F 0C	90 90			 jg aNul
    548	    029F  80 FB	39			 cmp bl, '9'
    549	    02A2  7F 0A	90 90			 jg bNul
    550	    02A6  EB 08	90			 jmp startCulc
    551	    02A9				 aNul:
    552	    02A9  B0 30				 mov al, '0'
    553	    02AB  EB 03	90			 jmp startCulc
    554	    02AE				 bNul:
    555	    02AE  B3 30				 mov bl, '0'
    556	    02B0				 startCulc:
    557	    02B0  2C 30				 sub al, '0'
    558	    02B2  80 EB	30			 sub bl, '0'
    559	    02B5  02 C3				 add al, bl
    560						 ;;;;;;;;;;;
    561	    02B7  02 C2				 add al, dl
    562	    02B9  B2 00				 mov dl, 0
    563						 ;;;;;;;;;;;;
    564	    02BB  3C 0A				 cmp al, 10
    565	    02BD  7C 06	90 90			 jl endCalc
    566	    02C1  B2 01				 mov dl, 1
    567	    02C3  2C 0A				 sub al, 10
    568	    02C5				 endCalc:
    569	    02C5  04 30				 add al, '0'
    570	    02C7  67| 88 07			 mov byte ptr[edi], al
Turbo Assembler	 Version 2.51	     05/11/21 13:35:17	    Page 11
func.ASM



    571
    572	    02CA  C3					 RET
    573	    02CB			 sumNumbers	 ENDP
    574					 ;=================================================
    575					 ; Процедура вычитания двух операндов
    576					 ; из	большего меньший
    577					 ; input - edi и esi -	элементы массива
    578					 ;=================================================
    579	    02CB			 subtraction	 PROC	 NEAR
    580	    02CB  66| 50			 push eax
    581	    02CD  66| 57			 push edi
    582	    02CF  66| 56			 push esi
    583
    584	    02D1  66| 8B CF			 mov ecx, edi
    585	    02D4  66| 83 C7 11			 add edi, 17
    586	    02D8  66| 83 C6 11			 add esi, 17
    587	    02DC  B2 00				 mov dl, 0
    588	    02DE  EB 05	90			 jmp startSub
    589
    590	    02E1				 decrement:
    591	    02E1  66| 4F			 dec edi
    592	    02E3  66| 4E			 dec esi
    593
    594	    02E5				 startSub:
    595	    02E5  67| 8A 07			 mov al, byte ptr[edi]
    596	    02E8  2A C2				 sub al,dl
    597	    02EA  67| 88 07			 mov byte ptr[edi], al
    598	    02ED  B2 00				 mov dl, 0
    599
    600	    02EF  66| 3B F9			 cmp edi, ecx
    601	    02F2  74 2C	90 90			 je endSubOperation
    602
    603	    02F6  67| 80 3F 39			 cmp byte ptr[edi], '9'
    604	    02FA  7F 0D	90 90			 jg firstIsSign
    605	    02FE  67| 80 3E 39			 cmp byte ptr[esi], '9'
    606	    0302  7F DD				 jg decrement
    607
    608	    0304  E8 0020			 call subtractNumbers
    609	    0307  EB D8				 jmp decrement
    610
    611	    0309				 firstIsSign:
    612	    0309  67| 80 3E 39			 cmp byte ptr[esi], '9'
    613	    030D  7F D2				 jg decrement
    614	    030F  B0 0A				 mov al, 10
    615	    0311  67| 8A 1E			 mov bl, byte ptr[esi]
    616	    0314  80 EB	30			 sub bl, '0'
    617	    0317  2A C3				 sub al, bl
    618	    0319  04 30				 add al, '0'
    619	    031B  67| 88 07			 mov byte ptr[edi], al
    620
    621	    031E  EB C1				 jmp decrement
    622	    0320				 endSubOperation:
    623	    0320  66| 5E			 pop esi
    624	    0322  66| 5F			 pop edi
    625	    0324  66| 58			 pop eax
    626	    0326  C3					 RET
    627	    0327			 subtraction	 ENDP
Turbo Assembler	 Version 2.51	     05/11/21 13:35:17	    Page 12
func.ASM



    628					 ;=================================================
    629					 ; Процедура вычитания двух цифр
    630					 ; edx - флаг заема
    631					 ; output bx - флаг	переполнения
    632					 ;=================================================
    633	    0327			 subtractNumbers PROC	 NEAR
    634	    0327  67| 8A 07			 mov al, byte ptr[edi]
    635	    032A  2C 30				 sub al, '0'
    636	    032C  67| 8A 1E			 mov bl, byte ptr[esi]
    637	    032F  80 EB	30			 sub bl, '0'
    638
    639	    0332  2A C3				 sub al, bl
    640	    0334  3C 00				 cmp al, 0
    641	    0336  7D 06	90 90			 jge hf
    642
    643	    033A  04 0A				 add al, 10
    644	    033C  B2 01				 mov dl, 1
    645	    033E				 hf:
    646	    033E  04 30				 add al, '0'
    647	    0340  67| 88 07			 mov byte ptr[edi], al
    648	    0343  C3					 RET
    649	    0344			 subtractNumbers ENDP
    650					 ;=================================================
    651					 ; Процедура приведения элемента структуры к	    +
    652					 нормальному	виду
    653					 ;
    654					 ; input - edi - адрес элемента
    655					 ;=================================================
    656	    0344			 normalize	 PROC	 NEAR
    657	    0344  66| 51			 push ecx
    658	    0346  66| 57			 push edi
    659	    0348  66| 50			 push eax
    660	    034A  66| 52			 push edx
    661	    034C  66| 53			 push ebx
    662
    663	    034E  66| 8B C7			 mov eax, edi;запоминаем edi
    664
    665	    0351  66| 83 C7 01			 add edi, 1
    666
    667	    0355  66| 33 C9			 xor ecx, ecx
    668	    0358				 ui:
    669	    0358  66| 83 F9 0A			 cmp ecx, 10
    670	    035C  74 32	90 90			 je endNormalize
    671	    0360  67| 80 3F 7C			 cmp byte ptr[edi], '|'
    672	    0364  74 08	90 90			 je endui
    673	    0368  66| 41			 inc ecx
    674	    036A  66| 47			 inc edi
    675	    036C  EB EA				 jmp ui
    676
    677	    036E				 endui:
    678
    679	    036E  66| BB 0000000A		 mov ebx, 10
    680	    0374  66| 2B D9			 sub ebx, ecx
    681	    0377  66| 4F			 dec edi
    682
    683	    0379				 endIteration:
    684	    0379  66| 3B F8			 cmp edi, eax
Turbo Assembler	 Version 2.51	     05/11/21 13:35:17	    Page 13
func.ASM



    685	    037C  74 12	90 90			 je endNormalize
    686
    687	    0380  67| 8A 17			 mov dl, byte ptr[edi]
    688	    0383  67| 88 14 1F			 mov byte ptr[edi + ebx],  dl
    689	    0387  B2 7C				 mov dl, '|'
    690	    0389  67| 88 17			 mov byte ptr[edi], dl
    691
    692	    038C  66| 4F			 dec edi
    693	    038E  EB E9				 jmp endIteration
    694	    0390				 endNormalize:
    695	    0390  66| 5B			 pop ebx
    696	    0392  66| 5A			 pop edx
    697	    0394  66| 58			 pop eax
    698	    0396  66| 5F			 pop edi
    699	    0398  66| 59			 pop ecx
    700	    039A  C3					 RET
    701	    039B			 normalize	 ENDP
    702
    703					 ;=================================================
    704					 ; Процедура вывода элемента структуры
    705					 ; input - edi - адрес элемента
    706					 ;=================================================
    707	    039B			 outStruct	 PROC	 NEAR
    708	    039B  66| 57			 push edi
    709	    039D  66| 51			 push ecx
    710	    039F  66| 50			 push eax
    711	    03A1  66| 52			 push edx
    712
    713	    03A3  67| 8A 17			 mov dl, byte ptr[edi]
    714	    03A6  B4 02				 mov ah,2
    715	    03A8  CD 21				 int 21h
    716	    03AA  66| 83 C7 01			 add edi, 1
    717
    718	    03AE  66| 33 C9			 xor ecx, ecx
    719	    03B1				 rty:
    720	    03B1  66| 83 F9 0A			 cmp ecx, 10
    721	    03B5  74 17	90 90			 je zxc
    722	    03B9  67| 80 3F 7C			 cmp byte ptr[edi], '|'
    723	    03BD  74 09	90 90			 je jjj
    724	    03C1  67| 8A 17				 mov dl, byte ptr[edi]
    725	    03C4  B4 02					 mov ah,2
    726	    03C6  CD 21					 int 21h
    727
    728	    03C8				 jjj:
    729	    03C8  66| 47			 inc edi
    730	    03CA  66| 41			 inc ecx
    731	    03CC  EB E3				 jmp rty
    732	    03CE				 zxc:
    733	    03CE  B2 2E				 mov dl, '.'
    734	    03D0  B4 02				 mov ah,2
    735	    03D2  CD 21				 int 21h
    736	    03D4  66| 83 C7 01			 add edi, 1
    737
    738	    03D8  66| 4F			 dec edi
    739	    03DA  66| 83 C1 01			 add ecx, 1
    740	    03DE				 rty1:
    741	    03DE  66| 83 F9 12			 cmp ecx, 18
Turbo Assembler	 Version 2.51	     05/11/21 13:35:17	    Page 14
func.ASM



    742	    03E2  74 17	90 90			 je zxc1
    743	    03E6  67| 80 3F 3F			 cmp byte ptr[edi], '?'
    744	    03EA  74 09	90 90			 je jjj1
    745	    03EE  67| 8A 17				 mov dl, byte ptr[edi]
    746	    03F1  B4 02					 mov ah,2
    747	    03F3  CD 21					 int 21h
    748
    749	    03F5				 jjj1:
    750	    03F5  66| 47			 inc edi
    751	    03F7  66| 41			 inc ecx
    752	    03F9  EB E3				 jmp rty1
    753	    03FB				 zxc1:
    754
    755	    03FB  66| 5A			 pop edx
    756	    03FD  66| 58			 pop eax
    757	    03FF  66| 59			 pop ecx
    758	    0401  66| 5F			 pop edi
    759
    760	    0403  C3					 RET
    761	    0404			 outStruct	 ENDP
    762					 ;=================================================
    763					 ; перенос большего по	модулю числа	в левый операнд
    764					 ;=================================================
    765	    0404			 changeOperand	 PROC	 NEAR
    766	    0404  66| 57			 push edi
    767	    0406  66| 56			 push esi
    768	    0408  66| 83 C7 01			 add edi, 1
    769	    040C  66| 83 C6 01			 add esi, 1
    770	    0410				 iterationCycle:
    771	    0410  67| 80 3F 39			 cmp byte ptr[edi], '9'
    772	    0414  7E 10	90 90			 jle secondCheck
    773
    774	    0418  67| 80 3E 39			 cmp byte ptr[esi], '9'
    775	    041C  7E 2A	90 90			 jle secondHappening
    776	    0420  66| 47			 inc edi
    777	    0422  66| 46			 inc esi
    778	    0424  EB EA				 jmp iterationCycle
    779
    780
    781	    0426				 secondCheck:
    782	    0426  67| 80 3E 39			 cmp byte ptr[esi], '9'
    783	    042A  7E 05	90 90			 jle equalSize
    784	    042E  EB 0B	90			 jmp firstHappening
    785	    0431				 equalSize:
    786	    0431  67| 8A 07			 mov al, byte ptr[edi]
    787	    0434  67| 3A 06			 cmp al, byte ptr[esi]
    788	    0437  7C 0F	90 90			 jl secondHappening
    789
    790	    043B					 firstHappening:
    791	    043B  66| 5E				 pop esi
    792	    043D  66| 5F				 pop edi
    793	    043F  66| B8 00000000			 mov eax, 0
    794	    0445  EB 0B	90				 jmp emd
    795
    796	    0448					 secondHappening:
    797	    0448  66| 5F				 pop edi
    798	    044A  66| 5E				 pop esi
Turbo Assembler	 Version 2.51	     05/11/21 13:35:17	    Page 15
func.ASM



    799	    044C  66| B8 00000001			 mov eax, 1
    800	    0452					 emd:
    801	    0452  C3					 RET
    802	    0453			 changeOperand	 ENDP
    803					 ;=================================================
    804					 ; перенос влево минимального операнда
    805					 ;=================================================
    806	    0453			 minimumOperand	 PROC	 NEAR
    807	    0453  66| 57			 push edi
    808	    0455  66| 56			 push esi
    809
    810	    0457  67| 80 3F 2D			 cmp byte ptr[edi], '-'
    811	    045B  74 05	90 90			 je firstMin
    812	    045F  EB 07	90			 jmp secondMin
    813
    814	    0462					 firstMin:
    815	    0462  66| 5E				 pop esi
    816	    0464  66| 5F				 pop edi
    817	    0466  EB EA					 jmp emd
    818
    819	    0468					 secondMin:
    820	    0468  66| 5F				 pop edi
    821	    046A  66| 5E				 pop esi
    822	    046C					 ehd:
    823	    046C  C3					 RET
    824	    046D			 minimumOperand	 ENDP
    825
    826					 PUBLIC	 PUTSS
    827					 PUBLIC	 PUTC
    828					 PUBLIC	 BINtoDEC
    829					 PUBLIC	 OutMassive
    830					 PUBLIC	 GETCH
    831					 PUBLIC	 bufferToStruct
    832					 PUBLIC	 clearMassive
    833					 PUBLIC	 checkOnDot
    834					 PUBLIC	 checkOnSize
    835					 PUBLIC	 checkOnNumber
    836					 PUBLIC	 ATOI
    837					 PUBLIC	 MulFive
    838					 PUBLIC	 sumOperand
    839					 PUBLIC	 outStruct
    840					 PUBLIC	 normalize
    841					 PUBLIC	 subtraction
    842					 PUBLIC	 changeOperand
    843					 PUBLIC	 minimumOperand
    844					 END
Turbo Assembler	 Version 2.51	     05/11/21 13:35:17	    Page 16
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "05/11/21"
??FILENAME			  Text	 "func	  "
??TIME				  Text	 "13:35:17"
??VERSION			  Number 0205
@@CONVERT			  Near	 _TEXT:018D
@@E				  Near	 _TEXT:0019
@@ERROR				  Near	 _TEXT:01B0
@@EXIT				  Near	 _TEXT:01B3
@@L				  Near	 _TEXT:0005
@@R				  Near	 _TEXT:0023
@CODE				  Text	 _TEXT
@CODESIZE			  Text	 0
@CPU				  Text	 0D0FH
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 FUNC
@MODEL				  Text	 2
@WORDSIZE			  Text	 4
ANUL				  Near	 _TEXT:02A9
ATOI				  Near	 _TEXT:0187
BINTODEC			  Near	 _TEXT:002D
BNUL				  Near	 _TEXT:02AE
BUFFERTOSTRUCT			  Near	 _TEXT:0103
CALC				  Near	 _TEXT:0287
CALCFIVE			  Near	 _TEXT:0219
CHANGEOPERAND			  Near	 _TEXT:0404
CHECKINTEGER			  Near	 _TEXT:0089
CHECKNUMBER			  Near	 _TEXT:00D6
CHECKONDOT			  Near	 _TEXT:0050
CHECKONNUMBER			  Near	 _TEXT:00C3
CHECKONSIZE			  Near	 _TEXT:0076
CHECKREAL			  Near	 _TEXT:0097
CHECKREAL1			  Near	 _TEXT:00A4
CLEARMASSIVE			  Near	 _TEXT:0161
DECR				  Near	 _TEXT:0032
DECREMENT			  Near	 _TEXT:02E1
DECREMENTSUM			  Near	 _TEXT:024C
EHD				  Near	 _TEXT:046C
EMD				  Near	 _TEXT:0452
ENDCALC				  Near	 _TEXT:02C5
ENDCHECK			  Near	 _TEXT:0073
ENDCHECKNUMBER			  Near	 _TEXT:0100
ENDCHECKREAL			  Near	 _TEXT:00B2
ENDCHECKSIZE			  Near	 _TEXT:00C0
ENDCYCLE			  Near	 _TEXT:0158
ENDITERATION			  Near	 _TEXT:0379
ENDMULFIVE			  Near	 _TEXT:01ED
ENDMULFIVE1			  Near	 _TEXT:020E
ENDNORMALIZE			  Near	 _TEXT:0390
ENDOF				  Near	 _TEXT:0186
ENDSUBOPERATION			  Near	 _TEXT:0320
ENDSUMOPERATION			  Near	 _TEXT:028C
ENDUI				  Near	 _TEXT:036E
Turbo Assembler	 Version 2.51	     05/11/21 13:35:17	    Page 17
Symbol Table



EQUALSIZE			  Near	 _TEXT:0431
ERRORNUMBER			  Near	 _TEXT:00FA
ERRORSIZE			  Near	 _TEXT:00BA
EXITCLEAR			  Near	 _TEXT:0173
FIRSTHAPPENING			  Near	 _TEXT:043B
FIRSTISSIGN			  Near	 _TEXT:0309
FIRSTMIN			  Near	 _TEXT:0462
FIRSTSIGN			  Near	 _TEXT:0268
GETCH				  Near	 _TEXT:0000
HF				  Near	 _TEXT:033E
INCREMENTESI			  Near	 _TEXT:00F6
INTEGER				  Near	 _TEXT:0125
INTEGER1			  Near	 _TEXT:0127
ITERATIONCYCLE			  Near	 _TEXT:0410
JJJ				  Near	 _TEXT:03C8
JJJ1				  Near	 _TEXT:03F5
M01				  Near	 _TEXT:0174
MIDDLECHECK1			  Near	 _TEXT:006F
MINIMUMOPERAND			  Near	 _TEXT:0453
MULFIVE				  Near	 _TEXT:01B6
NORMALIZE			  Near	 _TEXT:0344
NOTEND				  Near	 _TEXT:0285
OUTMASSIVE			  Near	 _TEXT:0174
OUTSTRUCT			  Near	 _TEXT:039B
PRINT				  Near	 _TEXT:0040
PUTC				  Near	 _TEXT:0024
PUTSS				  Near	 _TEXT:0005
REAL				  Near	 _TEXT:013B
REAL1				  Near	 _TEXT:0144
RTY				  Near	 _TEXT:03B1
RTY1				  Near	 _TEXT:03DE
SECONDCHECK			  Near	 _TEXT:0426
SECONDHAPPENING			  Near	 _TEXT:0448
SECONDMIN			  Near	 _TEXT:0468
SIGN				  Near	 _TEXT:0115
STARTCHECK			  Near	 _TEXT:0059
STARTCLEAR			  Near	 _TEXT:0161
STARTCULC			  Near	 _TEXT:02B0
STARTMULFIVE			  Near	 _TEXT:01C9
STARTSUB			  Near	 _TEXT:02E5
STARTSUM			  Near	 _TEXT:0250
SUBTRACTION			  Near	 _TEXT:02CB
SUBTRACTNUMBERS			  Near	 _TEXT:0327
SUMNUMBERS			  Near	 _TEXT:0293
SUMOPERAND			  Near	 _TEXT:0232
TEMP				  Near	 _TEXT:0270
UI				  Near	 _TEXT:0358
WQER				  Near	 _TEXT:01F9
YUI				  Near	 _TEXT:01E9
ZXC				  Near	 _TEXT:03CE
ZXC1				  Near	 _TEXT:03FB

Macro Name

CHECKSTR
CLEARMAS
GETELEMENT
Turbo Assembler	 Version 2.51	     05/11/21 13:35:17	    Page 18
Symbol Table



INPUTMAS
PUTL
PUTLS

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
_TEXT				  16  046D Word	  Public  CODE
